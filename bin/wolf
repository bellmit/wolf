#!/bin/sh

CURRENT_DIR=$(cd `dirname $0`; pwd)
PROJECT_DIR=$(cd ${CURRENT_DIR}; cd ../; pwd)

line="--------------------------------------------"

if [ -n "$1" ]; then
    command=$1
else
    command="init"
fi

function init() {
    echo "wolf init .... " 
    echo $line

    echo "start nacos"
    echo $line
    sh /Users/wingle/code/software/nacos/bin//startup.sh -m standalone > /Users/wingle/logs/wolf/wolf.log 2>&1  &

    echo "start redis" 
    echo $line
    /usr/local/redis/bin/redis-server > /Users/wingle/logs/wolf/wolf.log 2>&1 &
}

function deploy_union_test() {
    dir="${PROJECT_DIR}/app/estar/union-deploy-dubbo/"
    cd ${dir} && mvn clean package -Ptest

    scp /Users/wingle/code/github/wolf/app/estar/union-deploy-dubbo/target/union-deploy-dubbo.tar.gz \
        app@47.111.7.95:/home/app/tmp
    echo "union-deploy-dubbo.tar.gz transporting..."

    echo "union restart ..."
    ssh -A smapp "/home/app/bin/wolf release-union"
}



function deploy_task_test() {
    dir="${PROJECT_DIR}/app/estar/union-task/"
    cd ${dir} && mvn clean package -Ptest

    scp /Users/wingle/code/github/wolf/app/estar/union-task/target/union-task.tar.gz \
        app@47.111.7.95:/home/app/tmp
    echo "union-task.tar.gz transporting..."

    echo "task restart ..."
    ssh -A smapp "/home/app/bin/wolf release-task"
}

function scp_union_cr() {
    dir="${PROJECT_DIR}/app/estar/union-deploy-dubbo/"
    cd ${dir} && mvn clean package -Pcr

    scp /Users/wingle/code/github/wolf/app/estar/union-deploy-dubbo/target/union-deploy-dubbo.tar.gz \
        app@crapp:/home/app/tmp
    echo "union-deploy-dubbo.tar.gz transporting..."
}

function scp_onion_cr() {
    dir="/Users/wingle/code/work/onion/onion-api/onion-admin/"
    cd ${dir} && mvn clean package -Pcr

    scp /Users/wingle/code/work/onion/onion-api/onion-admin/target/onion-admin.tar.gz \
        app@crapp:/home/app/tmp
    echo "onion-admin.tar.gz transporting..."


    dir="/Users/wingle/code/work/onion/onion-api/onion-user/"
    cd ${dir} && mvn clean package -Pcr

    scp /Users/wingle/code/work/onion/onion-api/onion-user/target/onion-user.tar.gz \
        app@crapp:/home/app/tmp
    echo "onion-user.tar.gz transporting..."
}

function scp_task_cr() {
    dir="${PROJECT_DIR}/app/estar/union-task/"
    cd ${dir} && mvn clean package -Pcr

    scp /Users/wingle/code/github/wolf/app/estar/union-task/target/union-task.tar.gz \
        app@crapp:/home/app/tmp
    echo "union-task.tar.gz transporting..."
}

function deploy_union_cr() {
    scp_union_cr

    echo "union restart ..."
    ssh -A crapp "/home/app/bin/wolf release-union"
}

function deploy_onion_cr() {
    scp_onion_cr

    echo "onion restart ..."
    ssh -A crapp "source /etc/profile; /home/app/bin/wolf release-onion"
}

function deploy_task_cr() {
    scp_task_cr

    echo "task restart ..."
    ssh -A crapp "/home/app/bin/wolf release-task"
}

function deploy_onion_test() {
    dir="/Users/wingle/code/work/onion/onion-api/onion-admin/"
    cd ${dir} && mvn clean package -Ptest

    scp /Users/wingle/code/work/onion/onion-api/onion-admin/target/onion-admin.tar.gz \
        app@47.111.7.95:/home/app/tmp
    echo "onion-admin.tar.gz transporting..."


    dir="/Users/wingle/code/work/onion/onion-api/onion-user/"
    cd ${dir} && mvn clean package -Ptest

    scp /Users/wingle/code/work/onion/onion-api/onion-user/target/onion-user.tar.gz \
        app@47.111.7.95:/home/app/tmp
    echo "onion-user.tar.gz transporting..."

    echo "onion restart ..."
    ssh -A smapp "source /etc/profile; /home/app/bin/wolf release-onion"
}

function conn_test_redis() {
  redis-cli -h 47.111.7.95 -a estar
}

function clear() {
    echo "wolf clear ..."
    echo $line

    echo "stop nacos"
    echo $line
    sh /Users/wingle/code/software/nacos/bin//shutdown.sh > /Users/wingle/logs/wolf/wolf.log 2>&1 &

    echo "stop redis"
    echo $line
    /usr/local/redis/bin/redis-cli shutdown > /Users/wingle/logs/wolf/wolf.log 2>&1 &
}

function start() {
    echo "wolf starting ... "    
}

. ${PROJECT_DIR}/bin/install.sh

case "$command" in
  init)
      init ;;
  start)
      start ;;
  clear)
      clear ;;
  deploy-union-test)
      deploy_union_test ;;
  deploy-onion-test)
      deploy_onion_test ;;
  deploy-task-test)
      deploy_task_test ;;
  deploy-union-cr)
      deploy_union_cr ;;
  deploy-onion-cr)
      deploy_onion_cr ;;
  deploy-task-cr)
      deploy_task_cr ;;

  scp-union-cr)
      scp_union_cr ;;
  scp-onion-cr)
      scp_onion_cr ;;
  scp-task-cr)
      scp_task_cr ;;

  redis-test)
      conn_test_redis ;;
  install)
      install_all ;;
  install-boot)
      install_boot ;;
  install-lib)
      install_libs ;;
  install-dts)
      install_dts ;;
  install-business)
      install_business ;;
  install-business-stater)
      install_business_stater ;;
  install-union)
      install_union ;;
  install-middleware)
      install_middleware ;;
  install-notice)
      install_notice ;;

  install-account)
    install_account ;;
  install-uc)
    install_uc ;;
  install-org)
    install_org ;;
  install-knowledge)
    install_knowledge ;;
  install-goods)
    install_goods ;;
  install-trade)
    install_trade ;;
  install-pay)
    install_pay ;;
  install-content)
    install_content ;;
  install-onion)
    install_onion ;;
  install-datav)
    install_datav ;;
esac


