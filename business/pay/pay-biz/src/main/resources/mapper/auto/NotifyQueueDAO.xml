<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="study.daydayup.wolf.business.pay.biz.dal.dao.NotifyQueueDAO">
  <resultMap id="BaseResultMap" type="study.daydayup.wolf.business.pay.biz.dal.dataobject.NotifyQueueDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="payer_id" jdbcType="BIGINT" property="payerId" />
    <result column="payee_id" jdbcType="BIGINT" property="payeeId" />
    <result column="payment_no" jdbcType="VARCHAR" property="paymentNo" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="notify_url" jdbcType="VARCHAR" property="notifyUrl" />
    <result column="notify_data" jdbcType="VARCHAR" property="notifyData" />
    <result column="notify_response" jdbcType="VARCHAR" property="notifyResponse" />
    <result column="notify_at" jdbcType="TIMESTAMP" property="notifyAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Base_Column_List">
    id, payer_id, payee_id, payment_no, out_trade_no, `state`, notify_url, notify_data, 
    notify_response, notify_at, created_at
  </sql>
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notify_queue
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteById" parameterType="java.lang.Long">
    delete from notify_queue
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="study.daydayup.wolf.business.pay.biz.dal.dataobject.NotifyQueueDO">
    insert into notify_queue (id, payer_id, payee_id, 
      payment_no, out_trade_no, `state`, 
      notify_url, notify_data, notify_response, 
      notify_at, created_at)
    values (#{id,jdbcType=BIGINT}, #{payerId,jdbcType=BIGINT}, #{payeeId,jdbcType=BIGINT}, 
      #{paymentNo,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{notifyUrl,jdbcType=VARCHAR}, #{notifyData,jdbcType=VARCHAR}, #{notifyResponse,jdbcType=VARCHAR}, 
      #{notifyAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="study.daydayup.wolf.business.pay.biz.dal.dataobject.NotifyQueueDO">
    insert into notify_queue
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="payerId != null">
        payer_id,
      </if>
      <if test="payeeId != null">
        payee_id,
      </if>
      <if test="paymentNo != null">
        payment_no,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="notifyUrl != null">
        notify_url,
      </if>
      <if test="notifyData != null">
        notify_data,
      </if>
      <if test="notifyResponse != null">
        notify_response,
      </if>
      <if test="notifyAt != null">
        notify_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="payerId != null">
        #{payerId,jdbcType=BIGINT},
      </if>
      <if test="payeeId != null">
        #{payeeId,jdbcType=BIGINT},
      </if>
      <if test="paymentNo != null">
        #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="notifyUrl != null">
        #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="notifyData != null">
        #{notifyData,jdbcType=VARCHAR},
      </if>
      <if test="notifyResponse != null">
        #{notifyResponse,jdbcType=VARCHAR},
      </if>
      <if test="notifyAt != null">
        #{notifyAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="study.daydayup.wolf.business.pay.biz.dal.dataobject.NotifyQueueDO">
    update notify_queue
    <set>
      <if test="payerId != null">
        payer_id = #{payerId,jdbcType=BIGINT},
      </if>
      <if test="payeeId != null">
        payee_id = #{payeeId,jdbcType=BIGINT},
      </if>
      <if test="paymentNo != null">
        payment_no = #{paymentNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="notifyUrl != null">
        notify_url = #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="notifyData != null">
        notify_data = #{notifyData,jdbcType=VARCHAR},
      </if>
      <if test="notifyResponse != null">
        notify_response = #{notifyResponse,jdbcType=VARCHAR},
      </if>
      <if test="notifyAt != null">
        notify_at = #{notifyAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateById" parameterType="study.daydayup.wolf.business.pay.biz.dal.dataobject.NotifyQueueDO">
    update notify_queue
    set payer_id = #{payerId,jdbcType=BIGINT},
      payee_id = #{payeeId,jdbcType=BIGINT},
      payment_no = #{paymentNo,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=TINYINT},
      notify_url = #{notifyUrl,jdbcType=VARCHAR},
      notify_data = #{notifyData,jdbcType=VARCHAR},
      notify_response = #{notifyResponse,jdbcType=VARCHAR},
      notify_at = #{notifyAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>